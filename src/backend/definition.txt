public class User
{
    public User(int id, string name, string phoneNumber, string nationality, int age)
    {
        Id = id;
        Name = name;
        PhoneNumber = phoneNumber;
        Nationality = nationality;
        Age = age;
    }

    [DatabaseGenerated(DatabaseGeneratedOption.None)]
    public int Id { get; set; }

    public string Name { get; set; }
    public string PhoneNumber { get; set; }
    public string Nationality { get; set; }
    public int Age { get; set; }
    public ICollection<Task> Tasks { get; set; } = new List<Task>();
}

public class MassUpdateUserDto
{
    public string? Name { get; set; }
    public string? PhoneNumber { get; set; }
    public string? Nationality { get; set; }
    public int? Age { get; set; }
}


public class MassUpdateData
{
    public MassUpdateUserDto UserModel { get; set; } = new();
    public int[] UserIds { get; set; } = Array.Empty<int>();
}

[HttpPut("MassUpdate")]
public void MassUpdate(MassUpdateData massUpdateData)
{
    _usersService.MassUpdate(massUpdateData);
}

public void MassUpdate(MassUpdateData massUpdateData)
{
    List<User> usersToUpdate = _context.User
        .Where(row => massUpdateData.UserIds.Contains(row.Id))
        .ToList();

    foreach (User user in usersToUpdate)
    {
        foreach (PropertyInfo userProperty in typeof(User).GetProperties())
        {
            PropertyInfo? evaluatedModelProperty = typeof(MassUpdateUserDto).GetProperty(userProperty.Name);

            if (evaluatedModelProperty == null) continue;
            object? value = evaluatedModelProperty.GetValue(massUpdateData.UserModel);

            if (value == null) continue;
            userProperty.SetValue(user, value);
        }
    }

    _context.SaveChanges();
}
